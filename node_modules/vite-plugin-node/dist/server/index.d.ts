/// <reference types="express" />
/// <reference types="koa" />
/// <reference types="node" />
import { Connect, ViteDevServer } from "vite";
import { RequestAdapter, VitePluginNodeConfig } from "..";
import http from "http";
export declare const debugServer: (msg: string, ...args: any[]) => void;
export declare const SUPPORTED_FRAMEWORKS: {
    express: RequestAdapter<import("express").Application>;
    nest: RequestAdapter<import("@nestjs/common").INestApplication>;
    koa: RequestAdapter<import("koa")<import("koa").DefaultState, import("koa").DefaultContext>>;
    fastify: RequestAdapter<import("fastify").FastifyInstance<http.Server, http.IncomingMessage, http.ServerResponse, import("fastify").FastifyLoggerInstance>>;
};
export declare const getPluginConfig: (server: ViteDevServer) => VitePluginNodeConfig;
export declare const createMiddleware: (server: ViteDevServer) => Connect.HandleFunction;
